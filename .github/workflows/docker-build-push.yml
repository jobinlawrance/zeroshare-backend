name: Docker Build and Push

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        run: CGO_ENABLED=0 go build -o main .

      - name: Extract version from tag
        id: extract_version
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          # Remove 'v' prefix if it exists
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-architecture image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/jobinlawrance/zeroshare-backend:${{ env.VERSION }}
            ghcr.io/jobinlawrance/zeroshare-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output version
        run: echo "Built and pushed version ${{ env.VERSION }}"

  create-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previoustag
        run: |
          echo "TAG=$(git describe --tags --abbrev=0 HEAD^)" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          CHANGELOG=$(git log --pretty=format:"- %s" ${{ steps.previoustag.outputs.TAG }}..HEAD)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Container Images
            - `ghcr.io/jobinlawrance/zeroshare-backend:${{ github.ref_name }}`
            - `ghcr.io/jobinlawrance/zeroshare-backend:latest`

            ## Docs  
            For further installation check the docs at [ZeroShare Docs](https://zeroshare.jkbx.live/docs)
          
          draft: false
          prerelease: false
          generate_release_notes: false