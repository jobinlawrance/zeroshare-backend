services:
    jaeger-collector:
      image: jaegertracing/jaeger-collector
      command: [
        "--cassandra.keyspace=jaeger_v1_dc1", 
        "--cassandra.servers=cassandra",
        "--sampling.initial-sampling-probability=.5",
        "--sampling.target-samples-per-second=.01"
      ]
      ports:
        - "14269:16269"
        - "14268:14268"
        - "14250"
        - "9411:9411"
      restart: on-failure
      environment:
        - SAMPLING_CONFIG_TYPE=adaptive
        - SPAN_STORAGE_TYPE=cassandra
      depends_on:
        - cassandra-schema

    jaeger-query:
      image: jaegertracing/jaeger-query
      command: [
        "--cassandra.keyspace=jaeger_v1_dc1", 
        "--cassandra.servers=cassandra"
      ]
      ports:
        - "16686:16686"
        - "16687"
      restart: on-failure
      depends_on:
        - cassandra-schema

    jaeger-agent:
      image: jaegertracing/jaeger-agent
      command: ["--reporter.grpc.host-port=jaeger-collector:14250"]
      ports:
        - "5775:5775/udp"
        - "6831:6831/udp"
        - "6832:6832/udp"
        - "5778:5778/tcp"
      restart: on-failure
      depends_on:
        - jaeger-collector

    cassandra:
      container_name: cassandra
      image: cassandra:4.0
      volumes: 
        - /var/local/jaeger/cassandra/scheme:/var/lib/cassandra
      healthcheck:
        test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
        interval: 30s
        timeout: 10s
        retries: 5

    cassandra-schema:
      image: jaegertracing/jaeger-cassandra-schema
      depends_on:
        cassandra:
          condition: service_healthy